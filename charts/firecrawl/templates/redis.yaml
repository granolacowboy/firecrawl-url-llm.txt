{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "firecrawl.fullname" . }}-redis
  labels:
    {{- include "firecrawl.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      {{- include "firecrawl.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "firecrawl.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        command: [ "/bin/sh", "-c" ]
        args:
          - |
            if [ -n "$REDIS_PASSWORD" ]; then
              echo "Starting Redis with authentication"
              exec redis-server --bind 0.0.0.0 --requirepass "$REDIS_PASSWORD"
            else
              echo "Starting Redis without authentication"
              exec redis-server --bind 0.0.0.0
            fi
        env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "firecrawl.fullname" . }}-secret
                key: REDIS_PASSWORD
                optional: true
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "firecrawl.fullname" . }}-redis
  labels:
    {{- include "firecrawl.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  type: {{ .Values.redis.service.type }}
  ports:
    - port: {{ .Values.redis.service.port }}
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{- include "firecrawl.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis
{{- end }}
